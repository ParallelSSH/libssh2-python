max_jobs: 5
build:
  parallel: true
  verbosity: minimal
skip_branch_with_pr: true
environment:
  global:
    PYTHONUNBUFFERED: 1
    EMBEDDED_LIB: 1
    SYSTEM_LIBSSH2: 1
    PYPI_USER:
      secure: 2m0jy6JD/R9RExIosOT6YA==
    PYPI_PASS:
      secure: x+dF0A8BZUf2IrPNRN1O0w==
  matrix:
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      MSVC: "Visual Studio 14 Win64"
      ARCH: x64_86

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      MSVC: "Visual Studio 14 Win64"
      ARCH: x64_86

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      MSVC: "Visual Studio 14 Win64"
      ARCH: x64_86

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - set OPENSSL_DIR="C:\OpenSSL-v11-Win%PYTHON_ARCH%"
  - set VCLIBDIR=%WINDIR%\System32
  - cp %VCLIBDIR%/vcruntime*.dll ssh2/
  - cp %VCLIBDIR%/msvcp*.dll ssh2/
  - cp %VCLIBDIR%/msvcr*.dll ssh2/
  - cp %OPENSSL_DIR%/bin/*.dll ssh2/

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - pip install -U wheel setuptools twine cython

  # .c files need to be generated on Windows to handle platform
  # specific code.
  # Fix version used by versioneer to current git tag so the generated .c files
  # do not cause a version change.
  - python ci/appveyor/fix_version.py .
  - mv -f .git .git.bak
  - 7z x ci\appveyor\zlib1211.zip
  - ps: ls ssh2

build_script:
  - ci\\appveyor\\build_zlib.bat
  - ci\\appveyor\\build_ssh2.bat
  - rm -f ssh2/*.c
  - python -V
  - python setup.py build_ext
  - python setup.py build
  - python setup.py install
  - ps: ls ssh2

test_script:
  - cd dist
  - python -c "from ssh2.session import Session; Session()"
  - cd ..

after_test:
  # If tests are successful, create binary packages for the project.
  - python setup.py bdist_wheel
  - mv dist/* .

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: "*.whl"

deploy_script:
  - python ci/appveyor/pypi_upload.py *.whl
